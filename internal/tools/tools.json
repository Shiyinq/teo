[
    {
        "type": "function",
        "function": {
            "name": "get_current_weather",
            "description": "Get the current weather in a given location",
            "parameters": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The city and state, e.g. San Francisco, CA"
                    },
                    "unit": {
                        "type": "string",
                        "enum": [
                            "celsius",
                            "fahrenheit"
                        ]
                    }
                },
                "required": [
                    "location"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "scrape_web_data",
            "description": "Scrape data from a specified URL using the scraping tool",
            "parameters": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The full URL of the web page to scrape, e.g. https://r.jina.ai/example"
                    }
                },
                "required": [
                    "url"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "notes",
            "description": "A tool to manage notes with support for multiple operations. The tool supports the following actions:\n1. GET: Retrieves a list of all note file names stored in the system. This provides an overview of the available notes.\n2. GET_DETAIL: Fetches the content of a specific note based on the provided file name. This is useful for viewing or reading a particular note.\n3. POST: Creates a new note with a specified name and content. You must transform the title in the request by converting it to lowercase and replacing spaces with underscores (_) to ensure consistency in file naming. If a note with the transformed title already exists, the operation will return an error.4. PUT: Updates the content of an existing note identified by its file name. If the note does not exist, the operation will return an error.\n5. DELETE: Deletes an existing note based on its file name. If the note does not exist, the operation will return an error.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "GET_DETAIL",
                            "POST",
                            "PUT",
                            "DELETE"
                        ],
                        "description": "Action to perform on the note"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the note"
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the note"
                    }
                },
                "required": [
                    "action"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "filesystem",
            "description": "Provides a suite of tools for interacting with the file system, such as reading, writing, and listing files and directories. All operations are restricted to allowed directories.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tool_name": {
                        "type": "string",
                        "description": "The specific file system function to execute.",
                        "enum": [
                            "read_file",
                            "read_multiple_files",
                            "write_file",
                            "edit_file",
                            "create_directory",
                            "list_directory",
                            "directory_tree",
                            "move_file",
                            "search_files",
                            "get_file_info",
                            "list_allowed_directories",
                            "delete_path"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "description": "The primary path for the operation (e.g., file to read, directory to list, file to edit for edit_file, path to delete for delete_path). For read_multiple_files, this can be a JSON array of paths or a comma-separated string of paths."
                    },
                    "content": {
                        "type": "string",
                        "description": "Content to be written to a file (used by write_file)."
                    },
                    "old_path": {
                        "type": "string",
                        "description": "The source path for a move operation (for move_file)."
                    },
                    "new_path": {
                        "type": "string",
                        "description": "The destination path for a move operation (for move_file)."
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The search pattern for search_files."
                    },
                    "edit_start_line": {
                        "type": "integer",
                        "description": "The 1-indexed line number where the edit should begin. Required for edit_file."
                    },
                    "edit_end_line": {
                        "type": "integer",
                        "description": "Optional. The 1-indexed line number where the edit should end (inclusive). If not provided or less than edit_start_line, only the single line at edit_start_line is targeted for replacement by edit_new_content."
                    },
                    "edit_new_content": {
                        "type": "string",
                        "description": "The new content to replace the specified line(s). Required for edit_file. Multiple lines can be separated by \n."
                    },
                    "delete_recursive": {
                        "type": "boolean",
                        "description": "Optional. If true, allows recursive deletion of directories and their contents. Defaults to false. Used by delete_path."
                    }
                },
                "required": [
                    "tool_name"
                ]
            }
        }
    }
]