services:
  backend:
    build: .
    dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      DB_NAME: teo
      MONGODB_URI: mongodb://mongodb:27017
      REDIS_URL: redis://redis:6379
      QUEUE_NAME: telegram_messages
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      OLLAMA_BASE_URL: http://host.docker.internal:11434
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    env_file:
      - .env
    environment:
      TEO_BASE_URL: http://backend:8080
      QUEUE_NAME: telegram_messages
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy

  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:4.0.2-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  mongodb_data: